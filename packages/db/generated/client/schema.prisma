generator client {
  provider = "prisma-client-js"
  output   = "../generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  firstname String?
  lastname  String?
  email     String   @unique
  type      String
  verified  Boolean  @default(false)
  password  String?
  imageUrl  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  zap       Zap[]
}

model Zap {
  id         Int      @id @default(autoincrement())
  triggerId  String?
  name       String   @default("Untitled Zap")
  lastEdited DateTime @updatedAt
  createdAt  DateTime @default(now())
  published  Boolean  @default(false)
  RecordId   String?  @unique
  userId     Int
  user       User     @relation(fields: [userId], references: [id])
  trigger    Trigger?
  actions    Action[]
  zapRuns    ZapRun[]
  records    Record[]
  record     Record?  @relation("ZapSingleRecord", fields: [RecordId], references: [id])
}

model Record {
  id              String   @id @default(uuid())
  type            String
  zap             Zap      @relation(fields: [zapId], references: [id])
  zapId           Int
  createdAt       DateTime @default(now())
  pulledAt        DateTime @updatedAt
  title           String
  JsonData        Json
  triggerOptionId String
  zapSingle       Zap?     @relation("ZapSingleRecord") // âœ… Backward one-to-one reference (optional)
}

model Trigger {
  id            String            @id @default(uuid())
  zap           Zap               @relation(fields: [zapId], references: [id])
  zapId         Int               @unique
  optionId      String            @default("")
  configuration Json
  type          AvailableTriggers @relation(fields: [triggerId], references: [id])
  triggerId     String
}

model AvailableTriggers {
  id        String    @id @default(uuid())
  name      String
  metadata  Json      @default("{}")
  imagePath String    @default("")
  triggers  Trigger[]
}

model Action {
  id            String           @id @default(uuid())
  zapId         Int
  zap           Zap              @relation(fields: [zapId], references: [id])
  actionDetails AvailableActions @relation(fields: [actionId], references: [id])
  configuration Json             @default("{}")
  optionId      String           @default("")
  actionId      String
  sortingOrder  Int              @default(0)

  @@unique([zapId, sortingOrder])
}

model AvailableActions {
  id        String   @id @default(uuid())
  name      String
  imagePath String   @default("")
  actions   Action[]
  metadata  Json     @default("{}")
}

model ZapRun {
  id           String        @id @default(uuid())
  zapId        Int
  zap          Zap           @relation(fields: [zapId], references: [id])
  metaData     Json
  zapRunOutBox ZapRunOutbox?
}

model ZapRunOutbox {
  id       String @id @default(uuid())
  zapRunId String @unique
  zapRun   ZapRun @relation(fields: [zapRunId], references: [id])
}
