generator client {
  provider = "prisma-client-js"
  output   = "../generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int   @id @default(autoincrement()) 
  firstname     String
  lastname      String
  email         String
  password      String
  zap           Zap[]
}
 
model Zap {
id String  @id @default(uuid())
triggerId  String
userId     Int
user       User   @relation(fields: [userId],references: [id])
trigger    Trigger? 
actions    Action[]
zapRuns    ZapRun[]
}

model Trigger {
  id         String @id @default(uuid())
  zap        Zap                  @relation(fields: [zapId],references: [id])
  zapId      String               @unique
  type       AvailableTriggers    @relation(fields: [triggerId], references: [id])
  triggerId  String    
}

model AvailableTriggers {
  id          String   @id @default(uuid())
  name        String 
  metadata    Json     @default("{}")
  imagePath   String   @default("") 
  triggers    Trigger[]
}

model Action {
  id             String     @id @default(uuid())
  zapId          String
  zap            Zap     @relation(fields: [zapId],references: [id])
  actionDetails  AvailableActions  @relation(fields: [actionId],references: [id])
  actionId       String    
  sortingOrder   Int   @default(0)
}

model AvailableActions {
  id          String    @id @default(uuid())
  name        String        
  imagePath   String   @default("")
  actions     Action[]
  metadata    Json     @default("{}")
}

model ZapRun {
  id            String          @id @default(uuid())
  zapId         String
  zap           Zap             @relation(fields: [zapId],references: [id])
  metaData      Json           
  zapRunOutBox  ZapRunOutbox?    
}

model ZapRunOutbox {
  id        String    @id @default(uuid())
  zapRunId  String    @unique
  zapRun    ZapRun    @relation(fields: [zapRunId],references: [id]) 
}